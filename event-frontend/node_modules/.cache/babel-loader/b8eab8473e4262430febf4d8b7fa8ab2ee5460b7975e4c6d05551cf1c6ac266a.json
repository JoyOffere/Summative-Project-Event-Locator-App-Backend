{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\Summative-Project-Event-Locator-App-Backend\\\\event-frontend\\\\src\\\\components\\\\EventList.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport api from \"../services/api\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventList() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [searchRadius, setSearchRadius] = useState(5000); // 5km default\n  const [retryCount, setRetryCount] = useState(0);\n\n  // Define fetchEvents using useCallback to prevent infinite loop\n  const fetchEvents = useCallback(async () => {\n    setLoading(true);\n    setError('');\n    try {\n      // Add a small delay to avoid rapid refetching\n      await new Promise(resolve => setTimeout(resolve, 500));\n      const response = await api.get(`/events/nearby?radius=${searchRadius}`);\n      setEvents(response.data);\n      setRetryCount(0); // Reset retry count on success\n    } catch (err) {\n      var _err$response;\n      console.error('Error fetching events:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      if (retryCount < 3) {\n        // Auto-retry a few times for network errors\n        setRetryCount(prev => prev + 1);\n      } else {\n        var _err$response2, _err$response2$data;\n        // After max retries, show error to user\n        setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Could not connect to server. Please try again later.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [searchRadius, retryCount]);\n  useEffect(() => {\n    fetchEvents();\n  }, [fetchEvents]);\n  const formatLocation = locationText => {\n    // Parse POINT(lon lat) format\n    if (locationText) {\n      const match = locationText.match(/POINT\\(([^ ]+) ([^)]+)\\)/);\n      if (match) {\n        return `${match[2]}, ${match[1]}`; // lat, lon format\n      }\n    }\n    return 'Unknown location';\n  };\n\n  // Handle radius change with a separate function to prevent immediate trigger\n  const handleRadiusChange = e => {\n    setSearchRadius(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Nearby Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Search Radius (meters):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: searchRadius,\n            onChange: handleRadiusChange,\n            min: \"100\",\n            step: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchEvents(),\n          className: \"btn btn-secondary\",\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/events/new\",\n        className: \"btn btn-primary\",\n        children: \"Create New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setRetryCount(0);\n          fetchEvents();\n        },\n        className: \"btn btn-secondary retry-btn\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading events...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this) : events.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"events-grid\",\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: event.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"event-date\",\n          children: new Date(event.date).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"event-location\",\n          children: formatLocation(event.location)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"event-description\",\n          children: event.description && event.description.length > 100 ? `${event.description.substring(0, 100)}...` : event.description || 'No description available'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/events/${event.id}`,\n          className: \"btn btn-secondary\",\n          children: \"View Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-events\",\n      children: \"No events found in your area. Try increasing the search radius.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(EventList, \"bqk1KL0S2XtxZuyN6i5WMr8Hr5I=\");\n_c = EventList;\nexport default EventList;\nvar _c;\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","api","Link","jsxDEV","_jsxDEV","EventList","_s","events","setEvents","loading","setLoading","error","setError","searchRadius","setSearchRadius","retryCount","setRetryCount","fetchEvents","Promise","resolve","setTimeout","response","get","data","err","_err$response","console","message","prev","_err$response2","_err$response2$data","formatLocation","locationText","match","handleRadiusChange","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","step","onClick","to","length","map","event","title","Date","date","toLocaleString","location","description","substring","id","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/Summative-Project-Event-Locator-App-Backend/event-frontend/src/components/EventList.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport api from \"../services/api\";\nimport { Link } from \"react-router-dom\";\n\nfunction EventList() {\n    const [events, setEvents] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n    const [searchRadius, setSearchRadius] = useState(5000); // 5km default\n    const [retryCount, setRetryCount] = useState(0);\n\n    // Define fetchEvents using useCallback to prevent infinite loop\n    const fetchEvents = useCallback(async () => {\n        setLoading(true);\n        setError('');\n\n        try {\n            // Add a small delay to avoid rapid refetching\n            await new Promise(resolve => setTimeout(resolve, 500));\n\n            const response = await api.get(`/events/nearby?radius=${searchRadius}`);\n            setEvents(response.data);\n            setRetryCount(0); // Reset retry count on success\n        } catch (err) {\n            console.error('Error fetching events:', err.response?.data || err.message);\n\n            if (retryCount < 3) {\n                // Auto-retry a few times for network errors\n                setRetryCount(prev => prev + 1);\n            } else {\n                // After max retries, show error to user\n                setError(\n                    err.response?.data?.error ||\n                    'Could not connect to server. Please try again later.'\n                );\n            }\n        } finally {\n            setLoading(false);\n        }\n    }, [searchRadius, retryCount]);\n\n    useEffect(() => {\n        fetchEvents();\n    }, [fetchEvents]);\n\n    const formatLocation = (locationText) => {\n        // Parse POINT(lon lat) format\n        if (locationText) {\n            const match = locationText.match(/POINT\\(([^ ]+) ([^)]+)\\)/);\n            if (match) {\n                return `${match[2]}, ${match[1]}`; // lat, lon format\n            }\n        }\n        return 'Unknown location';\n    };\n\n    // Handle radius change with a separate function to prevent immediate trigger\n    const handleRadiusChange = (e) => {\n        setSearchRadius(e.target.value);\n    };\n\n    return (\n        <div className=\"event-list\">\n            <div className=\"list-header\">\n                <h2>Nearby Events</h2>\n                <div className=\"search-controls\">\n                    <label>\n                        Search Radius (meters):\n                        <input\n                            type=\"number\"\n                            value={searchRadius}\n                            onChange={handleRadiusChange}\n                            min=\"100\"\n                            step=\"100\"\n                        />\n                    </label>\n                    <button onClick={() => fetchEvents()} className=\"btn btn-secondary\">Refresh</button>\n                </div>\n                <Link to=\"/events/new\" className=\"btn btn-primary\">Create New Event</Link>\n            </div>\n\n            {error && (\n                <div className=\"error\">\n                    {error}\n                    <button\n                        onClick={() => { setRetryCount(0); fetchEvents(); }}\n                        className=\"btn btn-secondary retry-btn\"\n                    >\n                        Retry\n                    </button>\n                </div>\n            )}\n\n            {loading ? (\n                <div className=\"loading\">Loading events...</div>\n            ) : events.length > 0 ? (\n                <div className=\"events-grid\">\n                    {events.map((event) => (\n                        <div key={event.id} className=\"event-card\">\n                            <h3>{event.title}</h3>\n                            <p className=\"event-date\">{new Date(event.date).toLocaleString()}</p>\n                            <p className=\"event-location\">{formatLocation(event.location)}</p>\n                            <p className=\"event-description\">\n                                {event.description && event.description.length > 100\n                                    ? `${event.description.substring(0, 100)}...`\n                                    : event.description || 'No description available'}\n                            </p>\n                            <Link to={`/events/${event.id}`} className=\"btn btn-secondary\">View Details</Link>\n                        </div>\n                    ))}\n                </div>\n            ) : (\n                <div className=\"no-events\">No events found in your area. Try increasing the search radius.</div>\n            )}\n        </div>\n    );\n}\n\nexport default EventList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}