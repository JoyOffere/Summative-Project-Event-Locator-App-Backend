{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\Summative-Project-Event-Locator-App-Backend\\\\event-frontend\\\\src\\\\components\\\\Notification.js\",\n  _s = $RefreshSig$();\nimport \"./Notification.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notification() {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    // Create socket connection\n    const newSocket = io('http://localhost:3000');\n    setSocket(newSocket);\n\n    // Clean up on unmount\n    return () => {\n      newSocket.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    if (!socket) return;\n\n    // Listen for notifications\n    socket.on('notification', message => {\n      // Add new notification with a unique ID\n      const newNotification = {\n        id: Date.now(),\n        message,\n        isNew: true\n      };\n      setNotifications(prev => [newNotification, ...prev]);\n\n      // After 5 seconds, mark as not new (for animation)\n      setTimeout(() => {\n        setNotifications(prev => prev.map(notif => notif.id === newNotification.id ? {\n          ...notif,\n          isNew: false\n        } : notif));\n      }, 5000);\n    });\n    return () => {\n      socket.off('notification');\n    };\n  }, [socket]);\n  const dismissNotification = id => {\n    setNotifications(prev => prev.filter(notif => notif.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-container\",\n    children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification-item ${notification.isNew ? 'new' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-content\",\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"notification-dismiss\",\n        onClick: () => dismissNotification(notification.id),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, notification.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(Notification, \"r8HHXmVl1gSxelRSy0o2sUbBGA0=\");\n_c = Notification;\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["React","useEffect","useState","io","jsxDEV","_jsxDEV","Notification","_s","notifications","setNotifications","socket","setSocket","newSocket","disconnect","on","message","newNotification","id","Date","now","isNew","prev","setTimeout","map","notif","off","dismissNotification","filter","className","children","notification","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/Summative-Project-Event-Locator-App-Backend/event-frontend/src/components/Notification.js"],"sourcesContent":["import \"./Notification.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\n\nfunction Notification() {\n    const [notifications, setNotifications] = useState([]);\n    const [socket, setSocket] = useState(null);\n\n    useEffect(() => {\n        // Create socket connection\n        const newSocket = io('http://localhost:3000');\n        setSocket(newSocket);\n\n        // Clean up on unmount\n        return () => {\n            newSocket.disconnect();\n        };\n    }, []);\n\n    useEffect(() => {\n        if (!socket) return;\n\n        // Listen for notifications\n        socket.on('notification', (message) => {\n            // Add new notification with a unique ID\n            const newNotification = {\n                id: Date.now(),\n                message,\n                isNew: true\n            };\n\n            setNotifications(prev => [newNotification, ...prev]);\n\n            // After 5 seconds, mark as not new (for animation)\n            setTimeout(() => {\n                setNotifications(prev =>\n                    prev.map(notif =>\n                        notif.id === newNotification.id ? { ...notif, isNew: false } : notif\n                    )\n                );\n            }, 5000);\n        });\n\n        return () => {\n            socket.off('notification');\n        };\n    }, [socket]);\n\n    const dismissNotification = (id) => {\n        setNotifications(prev => prev.filter(notif => notif.id !== id));\n    };\n\n    return (\n        <div className=\"notification-container\">\n            {notifications.map((notification) => (\n                <div\n                    key={notification.id}\n                    className={`notification-item ${notification.isNew ? 'new' : ''}`}\n                >\n                    <div className=\"notification-content\">\n                        {notification.message}\n                    </div>\n                    <button\n                        className=\"notification-dismiss\"\n                        onClick={() => dismissNotification(notification.id)}\n                    >\n                        Ã—\n                    </button>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default Notification;"],"mappings":";;AAAA,OAAO,oBAAoB;AAC3B,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMW,SAAS,GAAGT,EAAE,CAAC,uBAAuB,CAAC;IAC7CQ,SAAS,CAACC,SAAS,CAAC;;IAEpB;IACA,OAAO,MAAM;MACTA,SAAS,CAACC,UAAU,CAAC,CAAC;IAC1B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACZ,IAAI,CAACS,MAAM,EAAE;;IAEb;IACAA,MAAM,CAACI,EAAE,CAAC,cAAc,EAAGC,OAAO,IAAK;MACnC;MACA,MAAMC,eAAe,GAAG;QACpBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdJ,OAAO;QACPK,KAAK,EAAE;MACX,CAAC;MAEDX,gBAAgB,CAACY,IAAI,IAAI,CAACL,eAAe,EAAE,GAAGK,IAAI,CAAC,CAAC;;MAEpD;MACAC,UAAU,CAAC,MAAM;QACbb,gBAAgB,CAACY,IAAI,IACjBA,IAAI,CAACE,GAAG,CAACC,KAAK,IACVA,KAAK,CAACP,EAAE,KAAKD,eAAe,CAACC,EAAE,GAAG;UAAE,GAAGO,KAAK;UAAEJ,KAAK,EAAE;QAAM,CAAC,GAAGI,KACnE,CACJ,CAAC;MACL,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC,CAAC;IAEF,OAAO,MAAM;MACTd,MAAM,CAACe,GAAG,CAAC,cAAc,CAAC;IAC9B,CAAC;EACL,CAAC,EAAE,CAACf,MAAM,CAAC,CAAC;EAEZ,MAAMgB,mBAAmB,GAAIT,EAAE,IAAK;IAChCR,gBAAgB,CAACY,IAAI,IAAIA,IAAI,CAACM,MAAM,CAACH,KAAK,IAAIA,KAAK,CAACP,EAAE,KAAKA,EAAE,CAAC,CAAC;EACnE,CAAC;EAED,oBACIZ,OAAA;IAAKuB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,EAClCrB,aAAa,CAACe,GAAG,CAAEO,YAAY,iBAC5BzB,OAAA;MAEIuB,SAAS,EAAE,qBAAqBE,YAAY,CAACV,KAAK,GAAG,KAAK,GAAG,EAAE,EAAG;MAAAS,QAAA,gBAElExB,OAAA;QAAKuB,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAChCC,YAAY,CAACf;MAAO;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACN7B,OAAA;QACIuB,SAAS,EAAC,sBAAsB;QAChCO,OAAO,EAAEA,CAAA,KAAMT,mBAAmB,CAACI,YAAY,CAACb,EAAE,CAAE;QAAAY,QAAA,EACvD;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAXJJ,YAAY,CAACb,EAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYnB,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAC3B,EAAA,CApEQD,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAsErB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}